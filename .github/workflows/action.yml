name: pipeline

on:
  push:
    branches: 
      - develop
      - main
  pull_request:
    branches:
      - '*'

jobs:
  ci:
    if: ${{ github.ref != 'refs/heads/main' }}
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16.x'

    - name: Install dependencies
      run: npm ci

    # - name: Run tests
    #   run: npm run test:cov

    # - name: SonarCloud Scan
    #   uses: SonarSource/sonarcloud-github-action@master
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
    #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: Build
      run: npm run build

    - name: Artifact
      uses: actions/upload-artifact@v2
      if: ${{ github.ref == 'refs/heads/develop' }}
      with:
        name: artifact
        path: |
          dist
          .env*
          .dockerignore
          Dockerfile
          package*.json
          README.md
        retention-days: 1

    - name: Image version
      id: version
      run: |
        GIT_BRANCH=${GITHUB_REF#refs/heads/}
        GIT_HASH=$(git rev-parse --short "$GITHUB_SHA")
        echo ::set-output name=tag::${GIT_BRANCH}_${GIT_HASH}
        echo "The version is ${GIT_BRANCH}_${GIT_HASH}"

    outputs:
      tag: ${{ steps.version.outputs.tag }}
    
  registry:
    needs: ci
    if: ${{ github.ref == 'refs/heads/develop' }}
    runs-on: ubuntu-latest

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: artifact

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.CR_PAT }}

    - name: Build and push the image
      run: |
        echo "${{ needs.ci.outputs.tag }}"
        echo "${{ needs.ci.outputs }}"
        docker build . --tag ghcr.io/ralvescostati/node_base:${{ needs.ci.outputs.tag }}"
        docker run ghcr.io/ralvescostati/node_base:${{ needs.ci.outputs.tag }}"
        docker push ghcr.io/ralvescostati/node_base:${{ needs.ci.outputs.tag }}"

  deploy_dev:
    needs: registry
    if: ${{ github.ref == 'refs/heads/develop' }}
    runs-on: ubuntu-latest

    steps:
    - name: Deploy Dev
      run: echo "Deployed :)"
  
  deploy_prod:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest

    steps:
    - name: Deploy Prod
      run: echo "Deployed :)" 

